/**
@page phys-services Using the Physics Services
@author <a href="http://umdgrb.umd.edu/pretz">John Pretz</a>

@section desc Description:

The <code>phys-services</code> project is a collection of common IceTray 
services
for use in icetray modules.  Currently there are three types of services
provided:

@li <b>I3RandomService</b> is patterned off of ROOT's TRandom, and provides access to random numbers drawn from several possible distributions.  The 
I3RandomService is an abstract interface, which can be serviced by any of
several implementations.  Currently there are two implementations of this
interface.  I3TRandomService uses a private instance of a TRandom to create
the random numbers.  I3GSLRandomServices uses the gnu scientific library
to generate random numbers. 
The advantage of having an I3RandomService interface between us and the 
random number generator.  We can dynamically switch between any
implementations of I3RandomSerivce.


@li <b>I3ParticleDataService</b> is a service dealing with the 
IceCube particle types.  The I3ParticleDataService provides physical constants 
such as mass, charge, and lifetime for any I3Particle::ParticleType that is 
given it.  
There are also facilites for converting between RDMC particle ids, Geant 
particle ids, and PDG particle ids, and a facility to convert an 
I3Particle::ParticleType into a std::string.  The conversion of Geant and PDG 
particle types has yet to be implemented.  There are probably several important
features that should be in this class that are not yet implemented.

@li <b> I3Calculator </b> is a service which handles standard calculations.
Right now these are mostly routines for calcuating geometrical quantities of
tracks, but this interface should be expanded as the software develops.

These are the only three services implemented at this point, but a few more are 
anticipated:

@li I picture the possibility for a <b>'Minimization Service'</b> so that we 
can modularize the minimization process as distinct from the physics.  
This will probably just be a generic
interface which will be implemented by ROOT's TMinuit like is done with the 
Random number service.

@li It would probably be beneficial to have <b>'Database Lookups'</b> 
referenced as
a service so as to insulate users from database lookups, and whether or not
the information retrieved is loacated in a database or in a local file, and
to insulate users from changes in the lookup mechanics.

@li There has been some talk of having the <b>'Photon Tables'</b> accessed
as a service, to insulate users of changes in the coordinate systems used 
and how the tables are accessed. 

@section download Download

The @c phys-services project is located in the production cvs archive on 
glacier.lbl.gov.  CVSROOT should point to :ext:glacier.lbl.gov:/home/icecube/cvsroot and the module name is phys-services.
It is included in the @c DATACLASS-APP metaproject, so there is no need to
download it separate from the @c DATACLASS-APP metaproject

<!--@section Test-->
@section use Use
This collection of services are not really intended to be used stand-alone, so 
there are no examples of their use outside of the <code>examples-offline</code> 
project in which they are used.


*/
