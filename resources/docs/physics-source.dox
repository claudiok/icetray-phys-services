/**
 @page phys-services-phys-source Using the Stream Source classes

 @author <a href="http://icecube.umd.edu/pretz">John Pretz</a>

 @section phys-services-phys-source-intro Introduction

 The IceTray system subscribes to the 'frame-stream-stop' data model.  In this
 model the data that comes through on a particular stream contains references
 to all the data that changes slower than that stream.  The data is issued
 on a particular 'stop' corresponding to a change in the stream on which
 the stop is issued.

 What this means is that the client modules (like a reconstruction) generically
 want to see, first a frame generated by a Geometry stop (since Geometry) is
 the slowest-changing stream.  That frame will contain just an I3Geometry
 and an I3GeometryHeader since that's all the data available at that point.

 The next frame to come through should be a Calibration frame containing
 an I3Calibration and and I3CalibrationHeader, but also containing an 
 I3Geometry and an I3GeometryHeader.

 After that a DetectorStatus stream comes through containing an 
 I3DetectorStatus, I3DetectorStatusHeader, I3Geometry, I3GeometryHeader, 
 I3Calibration, and an I3CalibrationHeader.

 After that we expect to see Event frames containing an I3Event and an
 I3EventHeader in addition to the already mentioned frames.

 If the one of the streams becomes outdated, then we should see a new frame
 on the outdated stream, followed by more Events with the updated stream data.

 It is the responsibility of the source modules to maintain this logic and 
 build up this structure.  Since so much logic is common between these different
 modules, that logic has been wrapped up in a few base Source modules (I3PhysicsSource, I3DetectorStatusSource, I3CalibrationSource, I3GeometrySource and I3MonitoringSource ) which  handle the logic.

 Based on that introduction you can now choose which document you need:

For those who need to write new ways of getting data into icetray:
 @ref phys-source-writing-stream-source-modules 

 or for those who just want to use existing code and need some pointers:
 @ref phys-source-using-stream-source-modules 


*/
