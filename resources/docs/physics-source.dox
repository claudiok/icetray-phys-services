/**
 @page phys-services-phys-source Using the I3UberSource 

 @author <a href="http://icecube.umd.edu/pretz">John Pretz</a>

 @section phys-services-phys-source-intro Introduction

 The I3UberSource is an experimental way to get the whole processing
 chain of IceTray modules started.  

 The idea is that the I3UberSource module has three interfaces available
 to it for getting the Geometry, the Calibration and some Events.  Those
 interfaces are the I3EventFactory, I3GeometryFactory, and 
 I3CalibrationFactory.  These three are abstract interfaces which allow
 the I3UberSource to decide in which order Frames should be issued 
 and what data they should contain.

 The idea is that when it comes time for a frame, the I3UberSource
 looks at each of these three interfaces and gets the next Time for each.
 If a geometry stop is next, then it gets an I3Geometry and I3GeometryHeader
 from the interfaces and puts these in a frame.  Same for the I3Event and 
 I3Calibration.  

 The idea is to make it easy to extend different ways of getting frames.
 For a particular example, there would be one implementation of the 
 I3GeometryFactory which gets one geometry for a file and gives it up.
 There would be another implementation which reads from the database.  One 
 also for reading from an f2k file. 

 Same for calibration.

 Since the interfaces are independent it should be easy to swap them out 
 and mix-and-match them.  For instance get the events from an f2k file
 and the calibration from a database and the geometry from a .geo file.

 It's experimental at this point.  I'm really interested in feedback.
 


*/
